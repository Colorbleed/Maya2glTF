source "maya2glTF_animachine.mel";

global string $maya2glTF_tempFolder = "C:/temp/maya2glTF_tests";

proc string _ensureTrailingSlash( string $folderPath ) {
    if (size($folderPath) == 0)
        error ("Invalid folder path!");

    if (substring($folderPath, size($folderPath), size($folderPath)) != "/")
        $folderPath += "/";

    return $folderPath;
}

proc string _combinePaths(string $path1, string $path2) {
    return size($path1) == 0
     ? $path2
     : _ensureTrailingSlash($path1)+$path2;
}

proc _deleteFolder( string $folderPath )
{
    if (`filetest -d ($folderPath)`) {
        print ("Deleting files in "+$folderPath+"...\n");

        string $subFiles[] = `getFileList -folder $folderPath`;

        for( $filename in $subFiles )
        {
            string $filePath = _combinePaths($folderPath, $filename);

            if( `filetest -d $filePath` )
            { 
                _deleteFolder($filePath);
            }
            else
            {
                sysFile -delete $filePath;
            }
        }

		sysFile -removeEmptyDir $folderPath;
    } 
}

proc _exportTestScene(string $scenesDir, string $filename) {
    global string $maya2glTF_tempFolder;

    int $exportAnim = match("anim",tolower($filename)) == "anim";

    print ("Exporting " + $filename + ($exportAnim ? " with" : " without") + " animation...\n");

    string $path = _combinePaths($scenesDir, $filename);

	if (catch (`file -f -ignoreVersion -strict on -typ "mayaAscii" -o $path`)) 
	{
        print ("Some errors occurred while loading the scene, this can happen if some Maya components (like Arnold) are not installed");
	}

    select -r `ls -v -type mesh -ap`;

	$min = `playbackOptions -q -min`;
	$max = `playbackOptions -q -max`;
	$fps = `currentTimeUnitToFPS`;

    string $rootFolder = _combinePaths($maya2glTF_tempFolder, $filename);
    string $outputFolder = _combinePaths($rootFolder, "gltf");

    if ($exportAnim 
            ? catch(`maya2glTF -acn "clip" -ast $min -aet $max -afr $fps -outputFolder $outputFolder`) 
            : catch(`maya2glTF -outputFolder $outputFolder`)) {
        print ("*** Exporting "+$filename+" failed! :-( ***\n");
    } else {
        print ("Exporting "+$filename+" succeeded\n");
    } 

    print ("-------------------------------------------------------------------\n");
}

global proc _exportTestScenes(string $scenesDir, string $subDir) {

	string $folder = _combinePaths($scenesDir, $subDir);
    print ("Scanning "+$folder+"...\n");

	string $filenames[] = `getFileList -folder $folder`;

    for($filename in $filenames)
    {
        string $filePath = _combinePaths($folder, $filename);
		string $subPath = _combinePaths($subDir, $filename);
        if( `filetest -d $filePath` )
        { 
            _exportTestScenes($scenesDir, $subPath);
        }
        else if (tolower(fileExtension($filePath)) == "ma")
        {
            _exportTestScene($scenesDir, $subPath);
        }
    }
}

proc _exportAllScenes() {
    global string $maya2glTF_tempFolder;

    _deleteFolder($maya2glTF_tempFolder);

    print ("Creating temp folder"+$maya2glTF_tempFolder+"...\n");
    sysFile -makeDir $maya2glTF_tempFolder;

    string $rootDir = `workspace -q -active`;
    string $scenesDir = _combinePaths($rootDir, "scenes");

    print ("Loading scenes from workspace folder = "+$scenesDir +"\n");

    _exportTestScenes($scenesDir, "");

    unloadPlugin  "maya2glTF";

    loadPlugin -rc maya2glTF_exportAllScenes_callback;
}

global proc maya2glTF_exportAllScenes_callback(string $cmd) {
    global string $maya2glTF_tempFolder;

    string $logPath = _combinePaths($maya2glTF_tempFolder, "log.txt");

    scriptEditorInfo -historyFilename $logPath  -writeHistory true;

    scriptEditorInfo -clearHistoryFile;

    if (catch (_exportAllScenes())) {
        print ("Failed to export all scenes!");
    }

    scriptEditorInfo -writeHistory false;
}

global proc maya2glTF_exportAllScenes() {
    unloadPlugin  "maya2glTF";
    loadPlugin -rc maya2glTF_exportAllScenes_callback;
    loadPlugin -ac maya2glTF_exportAllScenes_callback  "maya2glTF";
}

global proc maya2glTF_defaultSceneAnimMetaDataToJSON(string $outputFolder) {
    string $name = basenameEx(`file -q -sceneName -shortName`);
    string $json = maya2glTF_sceneAnimMetaDataToJSON($name, "", true);

    string $outputName = $name+".json";
    string $outputPath = _combinePaths($outputFolder, $outputName);
    int $fileId=`fopen $outputPath "w"`;
    fprint $fileId $json;
    fclose $fileId;   
}

{
    // maya2glTF_exportAllScenes;
    // maya2glTF_forEachSceneIn("D:/nova/scenes", false, false, "maya2glTF_defaultSceneAnimMetaDataToJSON(\"D:/nova/export/Anim\")");
    // maya2glTF_defaultSceneAnimMetaDataToJSON("D:/nova/export/Meta");
}

